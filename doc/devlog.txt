chenT -- 2019-10-17 14:15
Team bendyStraws formed, chose collaborative storytelling game/website project, and Tammy Chen chosen as project manager.

jamalK -- 2019-10-18 14:19
Set up GitHub repository.

chenT -- 2019-10-18 14:30
Linked submodule.

chenT -- 2019-10-20 22:45
Team bendyStraws has finished the design.pdf & uploaded it to github repository. Project name has been decided (Odyssey) as it portends greatness like the team name.

chenT -- 2019-10-20 22:58
Team bendyStraws has adjusted the margins of the design.pdf & uploaded it again. Encountered some unnecessary files (.DS_Store) being uploaded so team has added a .gitignore.

chenT -- 2019-10-21 20:20
Updated design.pdf based off of feedback given by peers during class. Added a project objective section, confirm password section in site component map & made site map clearer by adding a legend (defining the use of color).

jamalK -- 2019-10-21 23:14
INNER JOIN:
- When using INNER JOIN on a table A with a table B, it returns rows from the A table that have a corresponding row in the B table (using a foreign key f that is a column in both A and B).
- Can be used to find if a user edited a story by using INNER JOIN on the Story Masterlist table and the user’s User-Edits table with the story ID as a foreign key
LEFT JOIN:
- When using LEFT JOIN on a left table A with a right table B, it returns rows from the A table that have a corresponding row in the B table, and the rows without corresponding rows in the B table are filled with NULL values (all rows in table A are included).
- Can be helpful to find rows available in the left table without corresponding rows in the right table.
- We may change the User-Edits table to only contain records for stories the user edited, and then use LEFT JOIN on the Story Masterlist table and the user’s User-Edits table with the story ID as a foreign key to find the stories the user did not edit
CROSS JOIN:
- When using CROSS JOIN on a table A with N rows and a table B with M rows, it returns the Cartesian product, a result set that contains N*M rows.
- We do not see a use for CROSS JOIN for the time being.

chenT -- 2019-10-21 23:16
Our team found it interesting that programming is not something the human brain is fit for, but it is still a very popular career. It is also fascinating how employees at large companies, and anyone working to keep the internet functioning has to deal with errors to prevent the entire operation from collapsing.
Concrete actions we will take or procedures/protocols we will observe to make more awesome:
- Understand a comprehensive design plan prior to beginning work on the technical side of things
- If there is an issue or technical error, be sure to communicate it clearly with the team instead of using a hacky solution temporarily
- The InterTubes™ is a dangerous place. Be cautious when parsing - most of the time, utilize what you know!

caiK -- 2019-10-22 11:56
We are planning to change the User-Edits table to only contain records for stories the user edited as a primary key, and then use LEFT JOIN on the Story Masterlist, most likely like this:
SELECT masterlist.ID FROM Masterlist e1 LEFT JOIN User-Edits e2 ON e1.ID = e2.ID WHERE e2.ID IS NULL
This gets all the stories that the user hasn't edited.

jamalK -- 2019-10-22 14:36
Added Flask starter template with app.py and templates folder with a base.html and miscellaneous pages.

jamalK -- 2019-10-22 14:45
Created createstory.html template and added routes for creating a new story to app.py.

pehlivanianL -- 2019-10-22 22:52
Team bendyStraws discussed different approaches to storing story data. We had previously planned to have an individual table for each story containing its edits, but after a lengthy discussion decided to change this structure to have one master story_edits table.
This table will contain all edits to all stories, with their unique timestamp so that we can later sort these entries to obtain the complete story, or retreive the latest edit.
We updated the database explanations and examples to reflect this change.

pehlivanianL -- 2019-10-23 00:01
Started creating databases and started on preliminary functions and data structure.

chenT -- 2019-10-23 14:12
Started to work on authentication (user login) & fixed a slight indentation error

jamalK -- 2019-10-22 14:38
Created utl folder with __init__.py and dbfunctions.py (modified version of old database.py).

caiK -- 2019-10-22 14:48
Separated dbfunctions.py into 2 different files in order to prevent merge conflicts and changed imports to make it work.

jamalK -- 2019-10-22-21:48
Removed hyphens from filenames of files in utl folder and created dbcreatefunctions.py.
Updated newStory() by calling functions from dbcreatefunctions.py and redirecting to the story.

caiK -- 2019-10-22 14:17
Fixed some broken code from separating the files (There were no imports to other dbfunction files in dbeditfunction.py).

jamalK -- 2019-10-24 14:48
Added working auth and logout routes.
Created signup page and route, and working register route.

chenT -- 2019-10-24 23:15
Updated README.md with clear instructions about how to run the project (task the toid assignment)

chenT -- 2019-10-25 11:36
Updated README.md with instructions about git clone
